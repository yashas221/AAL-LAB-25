#include <stdio.h>
#include <stdlib.h>

#define MAX_VERTICES 100

int graph[MAX_VERTICES][MAX_VERTICES];
int visited[MAX_VERTICES];
int stack[MAX_VERTICES];
int stackIndex = 0;
int numVertices;

void dfs(int v) {
    visited[v] = 1; 
    for (int i = 0; i < numVertices; i++) {
        if (graph[v][i] == 1 && !visited[i]) {
            dfs(i);
        }
    }

    stack[stackIndex++] = v;
}

void topologicalSort() {
    for (int i = 0; i < numVertices; i++) {
        visited[i] = 0; 
    }

    for (int i = 0; i < numVertices; i++) {
        if (!visited[i]) {
            dfs(i);
        }
    }

    printf("Topological Sort: ");
    for (int i = stackIndex - 1; i >= 0; i--) {
        printf("%d ", stack[i]);
    }
    printf("\n");
}

int main() {
    numVertices = 6;

    
    graph[5][2] = 1;
    graph[5][0] = 1;
    graph[4][0] = 1;
    graph[4][1] = 1;
    graph[2][3] = 1;
    graph[3][1] = 1;

    topologicalSort();

    return 0;
}

OUTPUT:
Topological Sort: 5 4 2 3 1 0 
